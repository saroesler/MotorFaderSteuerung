Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                              ./UART/uart.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              ./UART/uart.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
                              ./fader.o (__addsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o) (__addsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                              ./fader.o (__ltsf2)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                              ./ADC_MCP/adc_mcp.o (__divsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                              ./ADC_MCP/adc_mcp.o (__fixunssfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                              ./ADC_MCP/adc_mcp.o (__floatunsisf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o) (__fp_cmp)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o) (__fp_round)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_zero)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                              ./main.o (__gtsf2)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                              ./ADC_MCP/adc_mcp.o (__mulsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o) (__mulsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
                              ./main.o (atoi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                              ./main.o (strcat)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strchr.o)
                              ./main.o (strchr)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
                              ./UART/uart.o (strlen)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strncpy.o)
                              ./main.o (strncpy)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                              ./main.o (itoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

fader               0x1e              ./fader.o
outMessage          0x14              ./UART/uart.o
inMessage           0x14              ./UART/uart.o
adcData             0x10              ./ADC_MCP/adc_mcp.o

↵
Speichereinrichtung
↵

Name             Ursprung           Länge             Eigenschaften
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD ./UART/uart.o
LOAD ./Motor/motor.o
LOAD ./Motor/shift.o
LOAD ./ADC_MCP/adc_mcp.o
LOAD ./fader.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x3cca
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e        0x0 ./UART/uart.o
 .text          0x000000000000005e        0x0 ./Motor/motor.o
 .text          0x000000000000005e        0x0 ./Motor/shift.o
 .text          0x000000000000005e        0x0 ./ADC_MCP/adc_mcp.o
 .text          0x000000000000005e        0x0 ./fader.o
 .text          0x000000000000005e        0x0 ./main.o
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strchr.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strncpy.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x000000000000005e                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_11
                0x000000000000005e       0x8e ./UART/uart.o
                0x000000000000005e                __vector_11
 .text.__vector_13
                0x00000000000000ec       0x96 ./UART/uart.o
                0x00000000000000ec                __vector_13
 .text.uart_init
                0x0000000000000182       0x62 ./UART/uart.o
                0x0000000000000182                uart_init
 .text.sendMessage
                0x00000000000001e4       0x46 ./UART/uart.o
                0x00000000000001e4                sendMessage
 .text.reserveBus
                0x000000000000022a       0x4e ./UART/uart.o
                0x000000000000022a                reserveBus
 .text.freeBus  0x0000000000000278       0x44 ./UART/uart.o
                0x0000000000000278                freeBus
 .text.startMotor
                0x00000000000002bc      0x178 ./Motor/motor.o
                0x00000000000002bc                startMotor
 .text.stopMotor
                0x0000000000000434       0xce ./Motor/motor.o
                0x0000000000000434                stopMotor
 .text.stopAll  0x0000000000000502       0x34 ./Motor/motor.o
                0x0000000000000502                stopAll
 .text.init_shift
                0x0000000000000536       0x20 ./Motor/shift.o
                0x0000000000000536                init_shift
 .text.shift    0x0000000000000556      0x106 ./Motor/shift.o
                0x0000000000000556                shift
 .text.initSPI  0x000000000000065c      0x11c ./ADC_MCP/adc_mcp.o
                0x000000000000065c                initSPI
 .text.startMeassure
                0x0000000000000778       0x58 ./ADC_MCP/adc_mcp.o
                0x0000000000000778                startMeassure
 .text.__vector_10
                0x00000000000007d0      0x35a ./ADC_MCP/adc_mcp.o
                0x00000000000007d0                __vector_10
 .text.newMessage
                0x0000000000000b2a       0x12 ./ADC_MCP/adc_mcp.o
                0x0000000000000b2a                newMessage
 .text.getMeassure
                0x0000000000000b3c       0x1a ./ADC_MCP/adc_mcp.o
                0x0000000000000b3c                getMeassure
 .text.readMeassure
                0x0000000000000b56      0x106 ./ADC_MCP/adc_mcp.o
                0x0000000000000b56                readMeassure
 .text.initFader
                0x0000000000000c5c      0x210 ./fader.o
                0x0000000000000c5c                initFader
 .text.workFader
                0x0000000000000e6c      0xdf4 ./fader.o
                0x0000000000000e6c                workFader
 .text.__vector_6
                0x0000000000001c60       0x54 ./fader.o
                0x0000000000001c60                __vector_6
 .text.setTimer
                0x0000000000001cb4      0xb9c ./fader.o
                0x0000000000001cb4                setTimer
 .text.gotoPosition
                0x0000000000002850      0x330 ./fader.o
                0x0000000000002850                gotoPosition
 .text.readFader
                0x0000000000002b80       0xb4 ./fader.o
                0x0000000000002b80                readFader
 .text.testFader
                0x0000000000002c34      0x394 ./fader.o
                0x0000000000002c34                testFader
 .text.init     0x0000000000002fc8       0x56 ./main.o
                0x0000000000002fc8                init
 .text.minisend
                0x000000000000301e       0x24 ./main.o
                0x000000000000301e                minisend
 .text.main     0x0000000000003042      0x72c ./main.o
                0x0000000000003042                main
 .text.libgcc.mul
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000376e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc.fplib
                0x000000000000376e        0xa /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
                0x000000000000376e                __subsf3
                0x0000000000003770                __addsf3
 .text.avr-libc.fplib
                0x0000000000003778       0xc0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
                0x0000000000003792                __addsf3x
 .text.avr-libc.fplib
                0x0000000000003838        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                0x0000000000003838                __lesf2
                0x0000000000003838                __nesf2
                0x0000000000003838                __eqsf2
                0x0000000000003838                __cmpsf2
                0x0000000000003838                __ltsf2
 .text.avr-libc.fplib
                0x0000000000003840        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                0x0000000000003840                __divsf3
 .text.avr-libc.fplib
                0x0000000000003844       0xcc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                0x000000000000385a                __divsf3x
                0x000000000000385e                __divsf3_pse
 .text.avr-libc.fplib
                0x0000000000003910       0x58 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                0x0000000000003910                __fixunssfsi
 .text.avr-libc.fplib
                0x0000000000003968       0x7a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                0x0000000000003968                __floatunsisf
                0x000000000000396c                __floatsisf
 .text.avr-libc.fplib
                0x00000000000039e2       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                0x00000000000039e2                __fp_cmp
 .text.avr-libc.fplib
                0x0000000000003a2a        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                0x0000000000003a2a                __fp_inf
 .text.avr-libc.fplib
                0x0000000000003a36        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                0x0000000000003a36                __fp_nan
 .text.avr-libc.fplib
                0x0000000000003a3c        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                0x0000000000003a3c                __fp_pscA
 .text.avr-libc.fplib
                0x0000000000003a4a        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                0x0000000000003a4a                __fp_pscB
 .text.avr-libc.fplib
                0x0000000000003a58       0x22 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                0x0000000000003a58                __fp_round
 .text.avr-libc.fplib
                0x0000000000003a7a       0x44 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                0x0000000000003a7a                __fp_split3
                0x0000000000003a8a                __fp_splitA
 .text.avr-libc.fplib
                0x0000000000003abe        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                0x0000000000003abe                __fp_zero
                0x0000000000003ac0                __fp_szero
 .text.avr-libc.fplib
                0x0000000000003acc        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                0x0000000000003acc                __gtsf2
                0x0000000000003acc                __gesf2
 .text.avr-libc.fplib
                0x0000000000003ad4        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                0x0000000000003ad4                __mulsf3
 .text.avr-libc.fplib
                0x0000000000003ad8       0xc2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                0x0000000000003aec                __mulsf3x
                0x0000000000003af0                __mulsf3_pse
 .text.avr-libc
                0x0000000000003b9a       0x3a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
                0x0000000000003b9a                atoi
 .text.avr-libc
                0x0000000000003bd4       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                0x0000000000003bd4                strcat
 .text.avr-libc
                0x0000000000003bea       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strchr.o)
                0x0000000000003bea                strchr
 .text.avr-libc
                0x0000000000003c00       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
                0x0000000000003c00                strlen
 .text.avr-libc
                0x0000000000003c12       0x1e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strncpy.o)
                0x0000000000003c12                strncpy
 .text.avr-libc
                0x0000000000003c30       0x3e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                0x0000000000003c30                itoa
 .text.avr-libc
                0x0000000000003c6e       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
                0x0000000000003c6e                __mulhi_const_10
 .text.avr-libc
                0x0000000000003c7e       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000003c7e                strrev
 .text.libgcc.mul
                0x0000000000003c9e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000003c9e       0x28 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000003c9e                __udivmodhi4
 .text.libgcc   0x0000000000003cc6        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000003cc6        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000003cc6        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000003cc6        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000003cc6        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000003cc6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000003cc6        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x0000000000003cc6                exit
                0x0000000000003cc6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000003cc6        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000003cca                _etext = .

.data           0x0000000000800060        0x2 load address 0x0000000000003cca
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./UART/uart.o
 .data          0x0000000000800060        0x0 ./Motor/motor.o
 .data          0x0000000000800060        0x0 ./Motor/shift.o
 .data          0x0000000000800060        0x0 ./ADC_MCP/adc_mcp.o
 .data          0x0000000000800060        0x0 ./fader.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strchr.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strncpy.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 .data.interrupt
                0x0000000000800060        0x1 ./UART/uart.o
                0x0000000000800060                interrupt
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
 *fill*         0x0000000000800061        0x1 
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end, .)

.bss            0x0000000000800062       0x68
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800062        0x0 ./UART/uart.o
 .bss           0x0000000000800062        0x0 ./Motor/motor.o
 .bss           0x0000000000800062        0x0 ./Motor/shift.o
 .bss           0x0000000000800062        0x0 ./ADC_MCP/adc_mcp.o
 .bss           0x0000000000800062        0x0 ./fader.o
 .bss           0x0000000000800062        0x0 ./main.o
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strchr.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strncpy.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 .bss.iOutMessage
                0x0000000000800062        0x1 ./UART/uart.o
                0x0000000000800062                iOutMessage
 .bss.numOutMessage
                0x0000000000800063        0x1 ./UART/uart.o
                0x0000000000800063                numOutMessage
 .bss.iInMessage
                0x0000000000800064        0x1 ./UART/uart.o
                0x0000000000800064                iInMessage
 .bss.numInMessage
                0x0000000000800065        0x1 ./UART/uart.o
                0x0000000000800065                numInMessage
 .bss.allowSending
                0x0000000000800066        0x1 ./UART/uart.o
                0x0000000000800066                allowSending
 .bss.shiftData
                0x0000000000800067        0x4 ./Motor/motor.o
 .bss.meassure  0x000000000080006b        0x2 ./ADC_MCP/adc_mcp.o
 .bss.new       0x000000000080006d        0x1 ./ADC_MCP/adc_mcp.o
 .bss.state     0x000000000080006e        0x1 ./ADC_MCP/adc_mcp.o
 .bss.oldData   0x000000000080006f        0x1 ./ADC_MCP/adc_mcp.o
 .bss.counter   0x0000000000800070        0x1 ./ADC_MCP/adc_mcp.o
 .bss.numFaderRunning
                0x0000000000800071        0x1 ./fader.o
                0x0000000000800071                numFaderRunning
 .bss.timerReady
                0x0000000000800072        0x1 ./fader.o
                0x0000000000800072                timerReady
 .bss.oldValue  0x0000000000800073        0x1 ./fader.o
                0x0000000000800073                oldValue
 *(COMMON)
 COMMON         0x0000000000800074       0x28 ./UART/uart.o
                0x0000000000800074                outMessage
                0x0000000000800088                inMessage
 COMMON         0x000000000080009c       0x10 ./ADC_MCP/adc_mcp.o
                0x000000000080009c                adcData
 COMMON         0x00000000008000ac       0x1e ./fader.o
                0x00000000008000ac                fader
                0x00000000008000ca                PROVIDE (__bss_end, .)
                0x0000000000003cca                __data_load_start = LOADADDR (.data)
                0x0000000000003ccc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000ca        0x0
                0x00000000008000ca                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000ca                PROVIDE (__noinit_end, .)
                0x00000000008000ca                _end = .
                0x00000000008000ca                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x5fa0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc      0x834 ./UART/uart.o
                                        0x840 (size before relaxing)
 .stab          0x0000000000000f00      0x42c ./Motor/motor.o
                                        0x648 (size before relaxing)
 .stab          0x000000000000132c      0x3fc ./Motor/shift.o
                                        0x63c (size before relaxing)
 .stab          0x0000000000001728      0x87c ./ADC_MCP/adc_mcp.o
                                        0xa98 (size before relaxing)
 .stab          0x0000000000001fa4     0x1080 ./fader.o
                                       0x12b4 (size before relaxing)
 .stab          0x0000000000003024      0xb70 ./main.o
                                        0xda4 (size before relaxing)
 .stab          0x0000000000003b94       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000003c0c      0x4bc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
                                        0x4c8 (size before relaxing)
 .stab          0x00000000000040c8       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000004158       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x00000000000041a0      0x510 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                                        0x51c (size before relaxing)
 .stab          0x00000000000046b0      0x240 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                                        0x24c (size before relaxing)
 .stab          0x00000000000048f0      0x318 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x0000000000004c08      0x1e0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                                        0x1ec (size before relaxing)
 .stab          0x0000000000004de8       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000004e60       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000004eb4       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000004f38       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000004fbc       0xfc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                                        0x108 (size before relaxing)
 .stab          0x00000000000050b8      0x1d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                                        0x1e0 (size before relaxing)
 .stab          0x000000000000528c       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                                         0x9c (size before relaxing)
 .stab          0x000000000000531c       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000005388       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x00000000000053d0      0x4d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                                        0x4e0 (size before relaxing)
 .stab          0x00000000000058a4      0x174 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
                                        0x180 (size before relaxing)
 .stab          0x0000000000005a18       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000005ab4       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strchr.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000005b50       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000005bd4       0xcc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strncpy.o)
                                         0xd8 (size before relaxing)
 .stab          0x0000000000005ca0      0x1b0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x0000000000005e50       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000005ec8       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000     0x1a19
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1a19 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./UART/uart.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./Motor/motor.o
 .comment       0x0000000000000000       0x12 ./Motor/shift.o
 .comment       0x0000000000000000       0x12 ./ADC_MCP/adc_mcp.o
 .comment       0x0000000000000000       0x12 ./fader.o
 .comment       0x0000000000000000       0x12 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Fader_Steuerung.elf elf32-avr)
LOAD linker stubs
