Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              ./UART/uart.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                              ./fader.o (__ltsf2)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                              ./fader.o (__divsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                              ./fader.o (__fixunssfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                              ./fader.o (__floatsisf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o) (__fp_cmp)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o) (__fp_round)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o) (__fp_zero)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                              ./fader.o (__gtsf2)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                              ./fader.o (__mulsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o) (__mulsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                              ./main.o (strcat)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
                              ./main.o (strlen)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                              ./main.o (itoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

fader               0xa               ./fader.o
outMessage          0x14              ./UART/uart.o
inMessage           0x14              ./UART/uart.o
adcData             0x7               ./ADC_MCP/adc_mcp.o

↵
Speichereinrichtung
↵

Name             Ursprung           Länge             Eigenschaften
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD ./UART/uart.o
LOAD ./Motor/motor.o
LOAD ./Motor/shift.o
LOAD ./ADC_MCP/adc_mcp.o
LOAD ./fader.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x2d40
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000042        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000046        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000046                __vector_1
                0x0000000000000046                __vector_12
                0x0000000000000046                __bad_interrupt
                0x0000000000000046                __vector_3
                0x0000000000000046                __vector_17
                0x0000000000000046                __vector_7
                0x0000000000000046                __vector_5
                0x0000000000000046                __vector_4
                0x0000000000000046                __vector_9
                0x0000000000000046                __vector_2
                0x0000000000000046                __vector_15
                0x0000000000000046                __vector_8
                0x0000000000000046                __vector_14
                0x0000000000000046                __vector_16
                0x0000000000000046                __vector_18
 .text          0x0000000000000048        0x0 ./UART/uart.o
 .text          0x0000000000000048        0x0 ./Motor/motor.o
 .text          0x0000000000000048        0x0 ./Motor/shift.o
 .text          0x0000000000000048        0x0 ./ADC_MCP/adc_mcp.o
 .text          0x0000000000000048        0x0 ./fader.o
 .text          0x0000000000000048        0x0 ./main.o
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .text          0x0000000000000048        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000048                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_11
                0x0000000000000048       0x84 ./UART/uart.o
                0x0000000000000048                __vector_11
 .text.__vector_13
                0x00000000000000cc       0xa8 ./UART/uart.o
                0x00000000000000cc                __vector_13
 .text.uart_init
                0x0000000000000174       0x3e ./UART/uart.o
                0x0000000000000174                uart_init
 .text.sendMessage
                0x00000000000001b2       0x4a ./UART/uart.o
                0x00000000000001b2                sendMessage
 .text.startMotor
                0x00000000000001fc      0x178 ./Motor/motor.o
                0x00000000000001fc                startMotor
 .text.stopMotor
                0x0000000000000374       0xce ./Motor/motor.o
                0x0000000000000374                stopMotor
 .text.stopAll  0x0000000000000442       0x34 ./Motor/motor.o
                0x0000000000000442                stopAll
 .text.init_shift
                0x0000000000000476       0x20 ./Motor/shift.o
                0x0000000000000476                init_shift
 .text.shift    0x0000000000000496      0x106 ./Motor/shift.o
                0x0000000000000496                shift
 .text.initSPI  0x000000000000059c      0x12c ./ADC_MCP/adc_mcp.o
                0x000000000000059c                initSPI
 .text.startMeassure
                0x00000000000006c8       0x58 ./ADC_MCP/adc_mcp.o
                0x00000000000006c8                startMeassure
 .text.__vector_10
                0x0000000000000720      0x1c4 ./ADC_MCP/adc_mcp.o
                0x0000000000000720                __vector_10
 .text.newMessage
                0x00000000000008e4       0x12 ./ADC_MCP/adc_mcp.o
                0x00000000000008e4                newMessage
 .text.getMeassure
                0x00000000000008f6       0x1a ./ADC_MCP/adc_mcp.o
                0x00000000000008f6                getMeassure
 .text.readMeassure
                0x0000000000000910      0x106 ./ADC_MCP/adc_mcp.o
                0x0000000000000910                readMeassure
 .text.initFader
                0x0000000000000a16      0x1fe ./fader.o
                0x0000000000000a16                initFader
 .text.workFader
                0x0000000000000c14      0x922 ./fader.o
                0x0000000000000c14                workFader
 .text.__vector_6
                0x0000000000001536       0x54 ./fader.o
                0x0000000000001536                __vector_6
 .text.setTimer
                0x000000000000158a      0xad0 ./fader.o
                0x000000000000158a                setTimer
 .text.readFader
                0x000000000000205a       0xb4 ./fader.o
                0x000000000000205a                readFader
 .text.testFader
                0x000000000000210e      0x268 ./fader.o
                0x000000000000210e                testFader
 .text.init     0x0000000000002376       0x56 ./main.o
                0x0000000000002376                init
 .text.main     0x00000000000023cc      0x560 ./main.o
                0x00000000000023cc                main
 .text.libgcc.mul
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc.fplib
                0x000000000000292c        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                0x000000000000292c                __lesf2
                0x000000000000292c                __nesf2
                0x000000000000292c                __eqsf2
                0x000000000000292c                __cmpsf2
                0x000000000000292c                __ltsf2
 .text.avr-libc.fplib
                0x0000000000002934        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                0x0000000000002934                __divsf3
 .text.avr-libc.fplib
                0x0000000000002938       0xcc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                0x000000000000294e                __divsf3x
                0x0000000000002952                __divsf3_pse
 .text.avr-libc.fplib
                0x0000000000002a04       0x58 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                0x0000000000002a04                __fixunssfsi
 .text.avr-libc.fplib
                0x0000000000002a5c       0x7a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                0x0000000000002a5c                __floatunsisf
                0x0000000000002a60                __floatsisf
 .text.avr-libc.fplib
                0x0000000000002ad6       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                0x0000000000002ad6                __fp_cmp
 .text.avr-libc.fplib
                0x0000000000002b1e        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                0x0000000000002b1e                __fp_inf
 .text.avr-libc.fplib
                0x0000000000002b2a        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                0x0000000000002b2a                __fp_nan
 .text.avr-libc.fplib
                0x0000000000002b30        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                0x0000000000002b30                __fp_pscA
 .text.avr-libc.fplib
                0x0000000000002b3e        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                0x0000000000002b3e                __fp_pscB
 .text.avr-libc.fplib
                0x0000000000002b4c       0x22 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                0x0000000000002b4c                __fp_round
 .text.avr-libc.fplib
                0x0000000000002b6e       0x44 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                0x0000000000002b6e                __fp_split3
                0x0000000000002b7e                __fp_splitA
 .text.avr-libc.fplib
                0x0000000000002bb2        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                0x0000000000002bb2                __fp_zero
                0x0000000000002bb4                __fp_szero
 .text.avr-libc.fplib
                0x0000000000002bc0        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                0x0000000000002bc0                __gtsf2
                0x0000000000002bc0                __gesf2
 .text.avr-libc.fplib
                0x0000000000002bc8        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                0x0000000000002bc8                __mulsf3
 .text.avr-libc.fplib
                0x0000000000002bcc       0xc2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                0x0000000000002be0                __mulsf3x
                0x0000000000002be4                __mulsf3_pse
 .text.avr-libc
                0x0000000000002c8e       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                0x0000000000002c8e                strcat
 .text.avr-libc
                0x0000000000002ca4       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
                0x0000000000002ca4                strlen
 .text.avr-libc
                0x0000000000002cb6       0x3e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                0x0000000000002cb6                itoa
 .text.avr-libc
                0x0000000000002cf4       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000002cf4                strrev
 .text.libgcc.mul
                0x0000000000002d14        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000002d14       0x28 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000002d14                __udivmodhi4
 .text.libgcc   0x0000000000002d3c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000002d3c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000002d3c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000002d3c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000002d3c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000002d3c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000002d3c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x0000000000002d3c                exit
                0x0000000000002d3c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000002d3c        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000002d40                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000002d40
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./UART/uart.o
 .data          0x0000000000800060        0x0 ./Motor/motor.o
 .data          0x0000000000800060        0x0 ./Motor/shift.o
 .data          0x0000000000800060        0x0 ./ADC_MCP/adc_mcp.o
 .data          0x0000000000800060        0x0 ./fader.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060       0x4b
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800060        0x0 ./UART/uart.o
 .bss           0x0000000000800060        0x0 ./Motor/motor.o
 .bss           0x0000000000800060        0x0 ./Motor/shift.o
 .bss           0x0000000000800060        0x0 ./ADC_MCP/adc_mcp.o
 .bss           0x0000000000800060        0x0 ./fader.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 .bss.iOutMessage
                0x0000000000800060        0x1 ./UART/uart.o
                0x0000000000800060                iOutMessage
 .bss.numOutMessage
                0x0000000000800061        0x1 ./UART/uart.o
                0x0000000000800061                numOutMessage
 .bss.iInMessage
                0x0000000000800062        0x1 ./UART/uart.o
                0x0000000000800062                iInMessage
 .bss.numInMessage
                0x0000000000800063        0x1 ./UART/uart.o
                0x0000000000800063                numInMessage
 .bss.uartFlag  0x0000000000800064        0x1 ./UART/uart.o
                0x0000000000800064                uartFlag
 .bss.shiftData
                0x0000000000800065        0x4 ./Motor/motor.o
 .bss.meassure  0x0000000000800069        0x2 ./ADC_MCP/adc_mcp.o
 .bss.new       0x000000000080006b        0x1 ./ADC_MCP/adc_mcp.o
 .bss.state     0x000000000080006c        0x1 ./ADC_MCP/adc_mcp.o
 .bss.oldData   0x000000000080006d        0x1 ./ADC_MCP/adc_mcp.o
 .bss.counter   0x000000000080006e        0x1 ./ADC_MCP/adc_mcp.o
 .bss.numFaderRunning
                0x000000000080006f        0x1 ./fader.o
                0x000000000080006f                numFaderRunning
 .bss.timerReady
                0x0000000000800070        0x1 ./fader.o
                0x0000000000800070                timerReady
 .bss.oldValue  0x0000000000800071        0x1 ./fader.o
                0x0000000000800071                oldValue
 *(COMMON)
 COMMON         0x0000000000800072       0x28 ./UART/uart.o
                0x0000000000800072                outMessage
                0x0000000000800086                inMessage
 COMMON         0x000000000080009a        0x7 ./ADC_MCP/adc_mcp.o
                0x000000000080009a                adcData
 COMMON         0x00000000008000a1        0xa ./fader.o
                0x00000000008000a1                fader
                0x00000000008000ab                PROVIDE (__bss_end, .)
                0x0000000000002d40                __data_load_start = LOADADDR (.data)
                0x0000000000002d40                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000ab        0x0
                0x00000000008000ab                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000ab                PROVIDE (__noinit_end, .)
                0x00000000008000ab                _end = .
                0x00000000008000ab                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x4f74
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc      0x750 ./UART/uart.o
                                        0x75c (size before relaxing)
 .stab          0x0000000000000e1c      0x42c ./Motor/motor.o
                                        0x648 (size before relaxing)
 .stab          0x0000000000001248      0x3fc ./Motor/shift.o
                                        0x63c (size before relaxing)
 .stab          0x0000000000001644      0x804 ./ADC_MCP/adc_mcp.o
                                        0xa20 (size before relaxing)
 .stab          0x0000000000001e48      0xd14 ./fader.o
                                        0xf48 (size before relaxing)
 .stab          0x0000000000002b5c      0x894 ./main.o
                                        0xac8 (size before relaxing)
 .stab          0x00000000000033f0       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000003480       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x00000000000034c8      0x510 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                                        0x51c (size before relaxing)
 .stab          0x00000000000039d8      0x240 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                                        0x24c (size before relaxing)
 .stab          0x0000000000003c18      0x318 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x0000000000003f30      0x1e0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                                        0x1ec (size before relaxing)
 .stab          0x0000000000004110       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000004188       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                                         0x60 (size before relaxing)
 .stab          0x00000000000041dc       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000004260       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                                         0x90 (size before relaxing)
 .stab          0x00000000000042e4       0xfc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                                        0x108 (size before relaxing)
 .stab          0x00000000000043e0      0x1d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                                        0x1e0 (size before relaxing)
 .stab          0x00000000000045b4       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000004644       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000046b0       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x00000000000046f8      0x4d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                                        0x4e0 (size before relaxing)
 .stab          0x0000000000004bcc       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000004c68       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strlen.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000004cec      0x1b0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x0000000000004e9c       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000     0x174e
 *(.stabstr)
 .stabstr       0x0000000000000000     0x174e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./UART/uart.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./Motor/motor.o
 .comment       0x0000000000000000       0x12 ./Motor/shift.o
 .comment       0x0000000000000000       0x12 ./ADC_MCP/adc_mcp.o
 .comment       0x0000000000000000       0x12 ./fader.o
 .comment       0x0000000000000000       0x12 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(MotorFader2.elf elf32-avr)
LOAD linker stubs
