Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                              ./ADC_MCP/adc_mcp.o (__udivmodqi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              ./UART/uart.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                              ./fader.o (__divsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                              ./fader.o (__fixunssfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                              ./fader.o (__floatsisf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o) (__fp_round)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o) (__fp_zero)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                              ./fader.o (__mulsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o) (__mulsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                              ./main.o (strcat)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                              ./main.o (itoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

fader               0xa               ./fader.o
outMessage          0x14              ./UART/uart.o
inMessage           0x14              ./UART/uart.o
adcData             0x7               ./ADC_MCP/adc_mcp.o

↵
Speichereinrichtung
↵

Name             Ursprung           Länge             Eigenschaften
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD ./UART/uart.o
LOAD ./Motor/motor.o
LOAD ./Motor/shift.o
LOAD ./ADC_MCP/adc_mcp.o
LOAD ./fader.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xed4
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e        0x0 ./UART/uart.o
 .text          0x000000000000005e        0x0 ./Motor/motor.o
 .text          0x000000000000005e        0x0 ./Motor/shift.o
 .text          0x000000000000005e        0x0 ./ADC_MCP/adc_mcp.o
 .text          0x000000000000005e        0x0 ./fader.o
 .text          0x000000000000005e        0x0 ./main.o
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x000000000000005e                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_11
                0x000000000000005e       0x5c ./UART/uart.o
                0x000000000000005e                __vector_11
 .text.__vector_13
                0x00000000000000ba       0x74 ./UART/uart.o
                0x00000000000000ba                __vector_13
 .text.uart_init
                0x000000000000012e       0x14 ./UART/uart.o
                0x000000000000012e                uart_init
 .text.sendMessage
                0x0000000000000142       0x34 ./UART/uart.o
                0x0000000000000142                sendMessage
 .text.startMotor
                0x0000000000000176       0xd4 ./Motor/motor.o
                0x0000000000000176                startMotor
 .text.stopMotor
                0x000000000000024a       0x7c ./Motor/motor.o
                0x000000000000024a                stopMotor
 .text.stopAll  0x00000000000002c6       0x18 ./Motor/motor.o
                0x00000000000002c6                stopAll
 .text.init_shift
                0x00000000000002de        0x8 ./Motor/shift.o
                0x00000000000002de                init_shift
 .text.shift    0x00000000000002e6       0x5a ./Motor/shift.o
                0x00000000000002e6                shift
 .text.initSPI  0x0000000000000340       0x2a ./ADC_MCP/adc_mcp.o
                0x0000000000000340                initSPI
 .text.startMeassure
                0x000000000000036a       0x1e ./ADC_MCP/adc_mcp.o
                0x000000000000036a                startMeassure
 .text.__vector_10
                0x0000000000000388       0xf8 ./ADC_MCP/adc_mcp.o
                0x0000000000000388                __vector_10
 .text.newMessage
                0x0000000000000480        0x6 ./ADC_MCP/adc_mcp.o
                0x0000000000000480                newMessage
 .text.getMeassure
                0x0000000000000486        0xe ./ADC_MCP/adc_mcp.o
                0x0000000000000486                getMeassure
 .text.readMeassure
                0x0000000000000494       0x6c ./ADC_MCP/adc_mcp.o
                0x0000000000000494                readMeassure
 .text.__vector_6
                0x0000000000000500       0x24 ./fader.o
                0x0000000000000500                __vector_6
 .text.setTimer
                0x0000000000000524      0x1e2 ./fader.o
                0x0000000000000524                setTimer
 .text.workFader
                0x0000000000000706      0x18a ./fader.o
                0x0000000000000706                workFader
 .text.readFader
                0x0000000000000890       0x56 ./fader.o
                0x0000000000000890                readFader
 .text.initFader
                0x00000000000008e6       0x84 ./fader.o
                0x00000000000008e6                initFader
 .text.testFader
                0x000000000000096a       0x56 ./fader.o
                0x000000000000096a                testFader
 .text.init     0x00000000000009c0        0xa ./main.o
                0x00000000000009c0                init
 .text.startup.main
                0x00000000000009ca      0x148 ./main.o
                0x00000000000009ca                main
 .text.libgcc.mul
                0x0000000000000b12        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000000b12       0x18 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                0x0000000000000b12                __udivmodqi4
 .text.libgcc   0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000b2a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc.fplib
                0x0000000000000b2a        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                0x0000000000000b2a                __divsf3
 .text.avr-libc.fplib
                0x0000000000000b2e       0xcc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                0x0000000000000b44                __divsf3x
                0x0000000000000b48                __divsf3_pse
 .text.avr-libc.fplib
                0x0000000000000bfa       0x58 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                0x0000000000000bfa                __fixunssfsi
 .text.avr-libc.fplib
                0x0000000000000c52       0x7a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                0x0000000000000c52                __floatunsisf
                0x0000000000000c56                __floatsisf
 .text.avr-libc.fplib
                0x0000000000000ccc        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                0x0000000000000ccc                __fp_inf
 .text.avr-libc.fplib
                0x0000000000000cd8        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                0x0000000000000cd8                __fp_nan
 .text.avr-libc.fplib
                0x0000000000000cde        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                0x0000000000000cde                __fp_pscA
 .text.avr-libc.fplib
                0x0000000000000cec        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                0x0000000000000cec                __fp_pscB
 .text.avr-libc.fplib
                0x0000000000000cfa       0x22 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                0x0000000000000cfa                __fp_round
 .text.avr-libc.fplib
                0x0000000000000d1c       0x44 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                0x0000000000000d1c                __fp_split3
                0x0000000000000d2c                __fp_splitA
 .text.avr-libc.fplib
                0x0000000000000d60        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                0x0000000000000d60                __fp_zero
                0x0000000000000d62                __fp_szero
 .text.avr-libc.fplib
                0x0000000000000d6e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                0x0000000000000d6e                __mulsf3
 .text.avr-libc.fplib
                0x0000000000000d72       0xc2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                0x0000000000000d86                __mulsf3x
                0x0000000000000d8a                __mulsf3_pse
 .text.avr-libc
                0x0000000000000e34       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                0x0000000000000e34                strcat
 .text.avr-libc
                0x0000000000000e4a       0x3e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                0x0000000000000e4a                itoa
 .text.avr-libc
                0x0000000000000e88       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000e88                strrev
 .text.libgcc.mul
                0x0000000000000ea8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000ea8       0x28 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000ea8                __udivmodhi4
 .text.libgcc   0x0000000000000ed0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000ed0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000ed0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000ed0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000ed0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000ed0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000ed0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x0000000000000ed0                exit
                0x0000000000000ed0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000ed0        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000ed4                _etext = .

.data           0x0000000000800060        0x4 load address 0x0000000000000ed4
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./UART/uart.o
 .data          0x0000000000800060        0x0 ./Motor/motor.o
 .data          0x0000000000800060        0x0 ./Motor/shift.o
 .data          0x0000000000800060        0x0 ./ADC_MCP/adc_mcp.o
 .data          0x0000000000800060        0x0 ./fader.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800060        0x4 ./main.o
 *(.gnu.linkonce.d*)
                0x0000000000800064                . = ALIGN (0x2)
                0x0000000000800064                _edata = .
                0x0000000000800064                PROVIDE (__data_end, .)

.bss            0x0000000000800064       0x4b
                0x0000000000800064                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800064        0x0 ./UART/uart.o
 .bss           0x0000000000800064        0x0 ./Motor/motor.o
 .bss           0x0000000000800064        0x0 ./Motor/shift.o
 .bss           0x0000000000800064        0x0 ./ADC_MCP/adc_mcp.o
 .bss           0x0000000000800064        0x0 ./fader.o
 .bss           0x0000000000800064        0x0 ./main.o
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 .bss.uartFlag  0x0000000000800064        0x1 ./UART/uart.o
                0x0000000000800064                uartFlag
 .bss.numInMessage
                0x0000000000800065        0x1 ./UART/uart.o
                0x0000000000800065                numInMessage
 .bss.iInMessage
                0x0000000000800066        0x1 ./UART/uart.o
                0x0000000000800066                iInMessage
 .bss.numOutMessage
                0x0000000000800067        0x1 ./UART/uart.o
                0x0000000000800067                numOutMessage
 .bss.iOutMessage
                0x0000000000800068        0x1 ./UART/uart.o
                0x0000000000800068                iOutMessage
 .bss.shiftData
                0x0000000000800069        0x4 ./Motor/motor.o
 .bss.counter   0x000000000080006d        0x1 ./ADC_MCP/adc_mcp.o
 .bss.oldData   0x000000000080006e        0x1 ./ADC_MCP/adc_mcp.o
 .bss.state     0x000000000080006f        0x1 ./ADC_MCP/adc_mcp.o
 .bss.new       0x0000000000800070        0x1 ./ADC_MCP/adc_mcp.o
 .bss.meassure  0x0000000000800071        0x2 ./ADC_MCP/adc_mcp.o
 .bss.oldValue  0x0000000000800073        0x1 ./fader.o
                0x0000000000800073                oldValue
 .bss.timerReady
                0x0000000000800074        0x1 ./fader.o
                0x0000000000800074                timerReady
 .bss.numFaderRunning
                0x0000000000800075        0x1 ./fader.o
                0x0000000000800075                numFaderRunning
 *(COMMON)
 COMMON         0x0000000000800076       0x28 ./UART/uart.o
                0x0000000000800076                outMessage
                0x000000000080008a                inMessage
 COMMON         0x000000000080009e        0x7 ./ADC_MCP/adc_mcp.o
                0x000000000080009e                adcData
 COMMON         0x00000000008000a5        0xa ./fader.o
                0x00000000008000a5                fader
                0x00000000008000af                PROVIDE (__bss_end, .)
                0x0000000000000ed4                __data_load_start = LOADADDR (.data)
                0x0000000000000ed8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000af        0x0
                0x00000000008000af                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000af                PROVIDE (__noinit_end, .)
                0x00000000008000af                _end = .
                0x00000000008000af                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1ef0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x0000000000000714      0x510 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                                        0x51c (size before relaxing)
 .stab          0x0000000000000c24      0x240 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                                        0x24c (size before relaxing)
 .stab          0x0000000000000e64      0x318 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x000000000000117c       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                                         0x84 (size before relaxing)
 .stab          0x00000000000011f4       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000001248       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                                         0x90 (size before relaxing)
 .stab          0x00000000000012cc       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000001350       0xfc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                                        0x108 (size before relaxing)
 .stab          0x000000000000144c      0x1d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                                        0x1e0 (size before relaxing)
 .stab          0x0000000000001620       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                                         0x9c (size before relaxing)
 .stab          0x00000000000016b0       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x00000000000016f8      0x4d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                                        0x4e0 (size before relaxing)
 .stab          0x0000000000001bcc       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strcat.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000001c68      0x1b0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x0000000000001e18       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000      0x33c
 *(.stabstr)
 .stabstr       0x0000000000000000      0x33c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./UART/uart.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./Motor/motor.o
 .comment       0x0000000000000000       0x12 ./Motor/shift.o
 .comment       0x0000000000000000       0x12 ./ADC_MCP/adc_mcp.o
 .comment       0x0000000000000000       0x12 ./fader.o
 .comment       0x0000000000000000       0x12 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(MotorFader2.elf elf32-avr)
LOAD linker stubs
